{"meta":{"title":"Hexo","subtitle":"","description":"","author":"piekenius","url":"http://pikonguwu.github.io","root":"/"},"pages":[{"title":"404惹=q=","date":"2023-04-11T13:03:13.608Z","updated":"2023-04-11T13:03:13.608Z","comments":true,"path":"404.html","permalink":"http://pikonguwu.github.io/404.html","excerpt":"","text":""},{"title":"piekenius' blog -v-","date":"2023-04-11T12:41:31.000Z","updated":"2023-04-11T12:43:36.608Z","comments":true,"path":"about/index.html","permalink":"http://pikonguwu.github.io/about/index.html","excerpt":"","text":"终于生出来了！！！好期待未来的自己会产出什么有趣的内容呢&#x3D;&#x3D;"}],"posts":[{"title":"专门给到磊磊的知识共享思考","slug":"专门给到磊磊的知识共享思考","date":"2023-08-07T14:37:23.000Z","updated":"2023-08-07T14:38:34.554Z","comments":true,"path":"2023/08/07/专门给到磊磊的知识共享思考/","link":"","permalink":"http://pikonguwu.github.io/2023/08/07/%E4%B8%93%E9%97%A8%E7%BB%99%E5%88%B0%E7%A3%8A%E7%A3%8A%E7%9A%84%E7%9F%A5%E8%AF%86%E5%85%B1%E4%BA%AB%E6%80%9D%E8%80%83/","excerpt":"","text":"","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://pikonguwu.github.io/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"HTTP","slug":"HTTP","date":"2023-08-07T13:57:08.000Z","updated":"2023-08-07T13:57:33.129Z","comments":true,"path":"2023/08/07/HTTP/","link":"","permalink":"http://pikonguwu.github.io/2023/08/07/HTTP/","excerpt":"走进HTTP协议1.1 HTTP协议组成： 请求行&#x2F;状态行：方法名、URL、协议版本&#x2F;协议版本、状态码、状态码描述 请求头&#x2F;响应头 请求体&#x2F;响应体 1.2 请求流程client使用框架提供API实现业务逻辑，进入到服务治理层，依托于中间件层，对每一个请求有先后处理逻辑，和请求级别绑定；进入协议编解码层，编译成server可以看懂的协议，通过传输层传输给server。server逻辑同理，在服务治理层和协议解码层之间多加路由层，根据URL提供handler，相当于定位特定server。","text":"走进HTTP协议1.1 HTTP协议组成： 请求行&#x2F;状态行：方法名、URL、协议版本&#x2F;协议版本、状态码、状态码描述 请求头&#x2F;响应头 请求体&#x2F;响应体 1.2 请求流程client使用框架提供API实现业务逻辑，进入到服务治理层，依托于中间件层，对每一个请求有先后处理逻辑，和请求级别绑定；进入协议编解码层，编译成server可以看懂的协议，通过传输层传输给server。server逻辑同理，在服务治理层和协议解码层之间多加路由层，根据URL提供handler，相当于定位特定server。","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://pikonguwu.github.io/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"Go","slug":"Go","date":"2023-08-04T06:41:20.000Z","updated":"2023-08-07T14:53:02.907Z","comments":true,"path":"2023/08/04/Go/","link":"","permalink":"http://pikonguwu.github.io/2023/08/04/Go/","excerpt":"Go简单实践实战案例一：猜谜游戏1. 123456 maxNum := 100rand.Seed(time.Now().UnixNano())secretNumber := rand.Intn(maxNum)fmt.Println(&quot;The secret number is &quot;, secretNumber)fmt.Println(&quot;Please input your guess&quot;) 使用**math&#x2F;rand&#x2F;**库：rand.Seed(time.Now().UnixNano())实现一个纳秒级更新的随机种子库；然后使用rand.Intn()函数实现随机数的生成。 rand.Intn(Number)函数是在一个左开右闭的区间内生成，rand.Int(Number)函数在一个全闭范围内生成。 2. 12345678910111213141516 reader := bufio.NewReader(os.Stdin)//for&#123; input, err := reader.ReadString(&#x27;\\n&#x27;)if err != nil &#123; fmt.Println(&quot;An error occured while reading input. Please try again&quot;, err) //continue&#125;input = strings.Trim(input, &quot;\\r\\n&quot;) guess, err := strconv.Atoi(input)if err != nil &#123; fmt.Println(&quot;Invalid input. Please enter an integer value&quot;) //continue&#125;fmt.Println(&quot;You guess is&quot;, guess) 使用bufio库：reader=NewReader(os.Stdin)创建一个新的对象，用于从标准输入端读入用户数据，即为reader；使用readString函数将输入放入变量Input中，碰到换行符就停止读入。如果存在错误信息（err不等于nil，相当于none），就打印错误提示并完成程序。最后，在Input变量中只用strings.trim函数去除换行符和回车符，并且将输入字符串转化为整型变量guess。","text":"Go简单实践实战案例一：猜谜游戏1. 123456 maxNum := 100rand.Seed(time.Now().UnixNano())secretNumber := rand.Intn(maxNum)fmt.Println(&quot;The secret number is &quot;, secretNumber)fmt.Println(&quot;Please input your guess&quot;) 使用**math&#x2F;rand&#x2F;**库：rand.Seed(time.Now().UnixNano())实现一个纳秒级更新的随机种子库；然后使用rand.Intn()函数实现随机数的生成。 rand.Intn(Number)函数是在一个左开右闭的区间内生成，rand.Int(Number)函数在一个全闭范围内生成。 2. 12345678910111213141516 reader := bufio.NewReader(os.Stdin)//for&#123; input, err := reader.ReadString(&#x27;\\n&#x27;)if err != nil &#123; fmt.Println(&quot;An error occured while reading input. Please try again&quot;, err) //continue&#125;input = strings.Trim(input, &quot;\\r\\n&quot;) guess, err := strconv.Atoi(input)if err != nil &#123; fmt.Println(&quot;Invalid input. Please enter an integer value&quot;) //continue&#125;fmt.Println(&quot;You guess is&quot;, guess) 使用bufio库：reader=NewReader(os.Stdin)创建一个新的对象，用于从标准输入端读入用户数据，即为reader；使用readString函数将输入放入变量Input中，碰到换行符就停止读入。如果存在错误信息（err不等于nil，相当于none），就打印错误提示并完成程序。最后，在Input变量中只用strings.trim函数去除换行符和回车符，并且将输入字符串转化为整型变量guess。 3. 123456789if guess &gt; secretNumber &#123; fmt.Println(&quot;Your guess is bigger than the secret number. Please try again&quot;)&#125; else if guess &lt; secretNumber &#123; fmt.Println(&quot;Your guess is smaller than the secret number. Please try again&quot;)&#125; else &#123; fmt.Println(&quot;Correct, you Legend!&quot;) //break&#125; //&#125; 加上判断，完成一次程序。需要多次输入，我们需要for循环。 该程序所用到的go库为：bufio，fmt，math&#x2F;rand，os(os.Stdin)，strconv，strings，time 实战案例二：在线词典 http通信包括：请求方法-请求头-请求体-响应-响应状态码-读取响应体-错误处理 首先在需要连接的网页中获取cURL并编写http请求代码如下（使用curlconverter.com）进行代码生成. 由于请求体需要的数据不局限于以上代码，则需要使用json序列化来实现请求体的变化。 通过oktools.net生成结构体代码解析response 输出相应的音标，解释等。将在线词典功能封装为一个函数；在主函数中读取命令行中的参数，载入word，运行程序。123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100package mainimport ( &quot;bytes&quot; &quot;encoding/json&quot; &quot;fmt&quot; &quot;io/ioutil&quot; &quot;log&quot; &quot;net/http&quot; &quot;os&quot;)//通过json序列化 实现请求体的变化type DictRequest struct&#123; Transtype string `json:&quot;trans_type&quot;` Source string `json:&quot;source&quot;`&#125;//解析responsetype DictResponse struct &#123; Rc int `json:&quot;rc&quot;` Wiki struct &#123; &#125; `json:&quot;wiki&quot;` Dictionary struct &#123; Prons struct &#123; EnUs string `json:&quot;en-us&quot;` En string `json:&quot;en&quot;` &#125; `json:&quot;prons&quot;` Explanations []string `json:&quot;explanations&quot;` Synonym []string `json:&quot;synonym&quot;` Antonym []string `json:&quot;antonym&quot;` WqxExample [][]string `json:&quot;wqx_example&quot;` Entry string `json:&quot;entry&quot;` Type string `json:&quot;type&quot;` Related []interface&#123;&#125; `json:&quot;related&quot;` Source string `json:&quot;source&quot;` &#125; `json:&quot;dictionary&quot;`&#125;func query(word string)&#123; client := &amp;http.Client&#123;&#125; //创建一个http客户端，用于发送给http请求 request:=DictRequest&#123;Transtype:&quot;en2zh&quot;,Source:word&#125; buf,err:=json.Marshal(request) if err!=nil&#123; log.Fatal(err) &#125; var data=bytes.NewReader(buf) req, err := http.NewRequest(&quot;POST&quot;, &quot;https://api.interpreter.caiyunai.com/v1/dict&quot;, data) //创建一个http post请求实例，被发送至中间该地址 if err != nil &#123; log.Fatal(err) &#125; //各式各样的请求头 req.Header.Set(&quot;authority&quot;, &quot;api.interpreter.caiyunai.com&quot;) req.Header.Set(&quot;accept&quot;, &quot;application/json, text/plain, */*&quot;) req.Header.Set(&quot;accept-language&quot;, &quot;zh-CN,zh;q=0.9,en;q=0.8,en-GB;q=0.7,en-US;q=0.6&quot;) req.Header.Set(&quot;app-name&quot;, &quot;xy&quot;) req.Header.Set(&quot;content-type&quot;, &quot;application/json;charset=UTF-8&quot;) req.Header.Set(&quot;device-id&quot;, &quot;6434127fee6f4eed253afdc2e6dc8683&quot;) req.Header.Set(&quot;origin&quot;, &quot;https://fanyi.caiyunapp.com&quot;) req.Header.Set(&quot;os-type&quot;, &quot;web&quot;) req.Header.Set(&quot;os-version&quot;, &quot;&quot;) req.Header.Set(&quot;referer&quot;, &quot;https://fanyi.caiyunapp.com/&quot;) req.Header.Set(&quot;sec-ch-ua&quot;, `&quot;Not/A)Brand&quot;;v=&quot;99&quot;, &quot;Microsoft Edge&quot;;v=&quot;115&quot;, &quot;Chromium&quot;;v=&quot;115&quot;`) req.Header.Set(&quot;sec-ch-ua-mobile&quot;, &quot;?0&quot;) req.Header.Set(&quot;sec-ch-ua-platform&quot;, `&quot;Windows&quot;`) req.Header.Set(&quot;sec-fetch-dest&quot;, &quot;empty&quot;) req.Header.Set(&quot;sec-fetch-mode&quot;, &quot;cors&quot;) req.Header.Set(&quot;sec-fetch-site&quot;, &quot;cross-site&quot;) req.Header.Set(&quot;user-agent&quot;, &quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/115.0.0.0 Safari/537.36 Edg/115.0.1901.188&quot;) req.Header.Set(&quot;x-authorization&quot;, &quot;token:qgemv4jr1y38jyq6vhvi&quot;) resp, err := client.Do(req) //发送http请求并等待响应 if err != nil &#123; log.Fatal(err) &#125; //出现错误则打印错误结果并终止程序 defer resp.Body.Close() //延迟关闭响应的主体 bodyText, err := ioutil.ReadAll(resp.Body) //读取相应主体的内容 if err != nil &#123; log.Fatal(err) &#125; //错误则 var dictResponse DictResponse err=json.Unmarshal(bodyText,&amp;dictResponse) if err!=nil&#123; log.Fatal(err) &#125; fmt.Println(word, &quot;UK:&quot;, dictResponse.Dictionary.Prons.En, &quot;US:&quot;, dictResponse.Dictionary.Prons.EnUs) for _,item:=range dictResponse.Dictionary.Explanations&#123; fmt.Println(item) &#125;&#125; //遍历切片，忽略下标值，输出每一个解释func main() &#123; if len(os.Args)!=2&#123; //`os.Args`是一个字符串切片，检查命令行参数的数量是否等于2 fmt.Fprintf(os.Stderr, `usage: simpleDict WORDexample:simpleDict hello `) //如果命令行参数数量不等於2，将说明信息打印到标准错误输出（stderr），`os.stderr`表示标准错误输出流 os.Exit(1) //终止程序执行，返回1（非零的状态码表示程序异常终止） &#125; word:=os.Args[1] //读取命令行的第二个参数（下标为1） query(word) &#125; 我真的要疯了.jpg之实战案例三：socks5代理，完全听不懂，大哥。 Go语言进阶与依赖管理 并发（多线程单核√）与并行（多线程多核） Goroutine：协程（√）&#x2F;线程 CSP：通过通信实现并发处理，而不共享数据 Channel 并发安全 Lock waitgroup 依赖管理 依赖管理演进：GOPATH-Go Vender-Go Module 依赖管理三要素 配置文件，描述依赖（go.mod） 依赖管理基本单元，原生库，单元依赖 version：语义化&#x2F;commit伪版本 indirect间接依赖 incompatible 依赖分发-Proxy 本地工具 go mod：init，download，tidy Go语言工程实践之测试 单元测试 _test.go结尾 func TestXxx(*testing.T) 初始化逻辑放到TestMain中：测试前准备工作；测试后的收尾工作 testify&#x2F;assert包可实现结果的equal&#x2F;notequal 代码覆盖率 依赖 mock 基准测试 设置一个简单的社区话题页面 需求： 展示话题（标题，文字描述）和回帖列表 实现一个本地web服务 话题和回帖数据用文件存储 ER图 分层结构 File-数据层-逻辑层-视图层-Client 高质量编程及编码规范 编码规范 简单性、可读性、生产力 编码规范 代码格式：gofmt自动格式化代码&#x2F;goimprts&#x3D;gofmt+依赖包管理 注释：代码作用、如何做的、实现原因、什么情况会出错 · 公共符号始终要注释 命名规范： variable 缩略词全大写，位于变量开头且不需要导出时，使用全小写 全局变量需要在名字中提供更多上下文信息 function 不携带包名的上下文信息 当名为foo的包某个函数返回类型Foo时，可以省略类型信息而不出现歧义 当名为foo的包某个函数返回类型T时，可以在函数名中加入类型信息 package 只有小写字母组成 不与标准库同名 不适用常用变量名作为包名 使用单数而不是复数 谨慎使用缩写 控制流程 避免嵌套 错误和异常处理 简单错误：优先使用errors.New(string)创建匿名变量直接表示简单错误；如果有格式化要求，使用fmt.Errorf 错误的Wrap（包装）和Unwrap（解包装）：提供一个error嵌套另一个error，生成error的跟踪链；在fmt.Errorf中使用%w来将一个错误关联至错误链中 错误判定：判定一个错误是否为特定错误，使用error.ls，可以判断错误链上的所有错误是否含有特定错误；使用errors.As在错误链上获取特定种类的错误 panic：不建议 recover：只能在被defer的函数中使用；嵌套无法生效；只在当前goroutine生效；defer的语句是后进先出。如果需要更多上下文信息，可以recover后在log中记录当前的调用栈 性能优化建议 Benchmarkgo test -bench=. -benchmen Slice预分配内存；大内存未释放（copy代替re-slice） Map预分配内存 字符串处理：使用strings.Builder&#x2F;strings.Buffer做字符串拼接 空结构体：节省内存 atomic包：效率比锁高；sync.Mutex应该用来保护一段逻辑而不是保护一个变量；对于非数值操作，而可以使用atomic.Value 性能调优 性能分析工具pprof：可视化和分析性能分析数据，可以知道程序在什么地方耗费了多少CPU、Memoryhttps://github.com/wolfogre/go-pprof-practice 12345go tool pprof &quot;http://localhost:6060/debug/pprof/profile?seconds=10&quot; //进入pproftop //查看占用资源最多的函数list 关键字 //查找代码行web //调用关系可视化go tool pprof -http=:8080 &quot;http://localhost:6060/debug/pprof/heap&quot; //处理堆内存问题 性能调优案例 业务服务优化 建立服务性能评估手段 服务性能评估方式 请求流量构造 压测范围 单机器压测 集群压测 性能数据采集 单机性能数据 集群性能数据 分析性能数据（使用库不规范、高并发场景优化不足…） 重点优化项改造（diff） 优化效果验证 重复压测验证 上限评估优化结果：关注服务监控、逐步放量、收集性能数据 进一步优化，服务整体链路分析 规范上有服务调用接口 分析链路，提升服务性能 基础库优化 AB实验SDK优化 设计完善改造方案、数据按需获取、数据序列协议优化 内部压测验证 对光业务服务落地验证 Go语言优化 编译器优化：内存分配、代码编译流程、内部压测验证、推广业务服务落地验证","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://pikonguwu.github.io/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"随笔记录","slug":"随笔记录","date":"2023-06-28T06:02:07.000Z","updated":"2023-06-28T06:08:30.189Z","comments":true,"path":"2023/06/28/随笔记录/","link":"","permalink":"http://pikonguwu.github.io/2023/06/28/%E9%9A%8F%E7%AC%94%E8%AE%B0%E5%BD%95/","excerpt":"来自20230628的一段记录：乱世佳人观后感：原来生活没有对错，根本没有人在意你的道德正确，能够坚持给自己看，不能够坚持给自己看，都取决于你。快乐乐观生活的命题在上个世纪已经出现在漂亮国了。","text":"来自20230628的一段记录：乱世佳人观后感：原来生活没有对错，根本没有人在意你的道德正确，能够坚持给自己看，不能够坚持给自己看，都取决于你。快乐乐观生活的命题在上个世纪已经出现在漂亮国了。","categories":[],"tags":[{"name":"口水鸡真的很营养啊","slug":"口水鸡真的很营养啊","permalink":"http://pikonguwu.github.io/tags/%E5%8F%A3%E6%B0%B4%E9%B8%A1%E7%9C%9F%E7%9A%84%E5%BE%88%E8%90%A5%E5%85%BB%E5%95%8A/"}]},{"title":"matlab笔记","slug":"matlab笔记","date":"2023-06-06T12:58:11.000Z","updated":"2023-08-04T07:14:16.015Z","comments":true,"path":"2023/06/06/matlab笔记/","link":"","permalink":"http://pikonguwu.github.io/2023/06/06/matlab%E7%AC%94%E8%AE%B0/","excerpt":"linspace(a,b,n)logspacea([m n],[I j])a(m1:m2,n1:n2) strcat()length char double strcmp() ischar findstr() deblank()cat(dimension,p1,p2,…)remat(p,[])reshape(p,[])reshapeis*diag() triu() tril()A’ rot90() fliplr flipud() flipdim(a,dim)inv det rank tracemean median prod sum cumsum cumprodsort(A,dim)dim&#x3D;1,colony dim&#x3D;2,rowconv() deconv()&#x3D;[q商式,r余式]polyval,polyvalm(poly,m) roots() poly(roots())一个向量线性方程组求解的三种方法：A\\B;x&#x3D;rref([A,B]);inv(A)*Bround floor fix ceilrem被除数 mod除数factor factorial gcd lcm m文件：save和loadfunction: input(‘表达式’),’s’表示字符串disp()pause() pause off&#x2F;pause on if elseif switch 表达式（标量或字符串） case 表达式123（标量字符串或元胞矩阵） otherwise 不用加breaktry catch lasterr 试探性 其中总有一个可以实现，如果lasterr返回空字符串则说明try实现，其他则是catch实现 for 循环变量＝起始值：步长：终止值循环体end*当循环变量等于矩阵表达式时，依次等于其中元素循环嵌套与自然筛选法 while表达式循环体语句endbreak，continue，return不执行后续代码 函数文件基本格式：function 输出参数列表&#x3D;函数名（输入参数列表）注释说明语句段程序语句段输出形参多于1个时，要用[ ]函数递归nargin和nargout 判断输入&#x2F;输出参数个数进行函数分类处理 gloabal 变量名 全局变量，不过要在函数文件和命令窗口中都写入","text":"linspace(a,b,n)logspacea([m n],[I j])a(m1:m2,n1:n2) strcat()length char double strcmp() ischar findstr() deblank()cat(dimension,p1,p2,…)remat(p,[])reshape(p,[])reshapeis*diag() triu() tril()A’ rot90() fliplr flipud() flipdim(a,dim)inv det rank tracemean median prod sum cumsum cumprodsort(A,dim)dim&#x3D;1,colony dim&#x3D;2,rowconv() deconv()&#x3D;[q商式,r余式]polyval,polyvalm(poly,m) roots() poly(roots())一个向量线性方程组求解的三种方法：A\\B;x&#x3D;rref([A,B]);inv(A)*Bround floor fix ceilrem被除数 mod除数factor factorial gcd lcm m文件：save和loadfunction: input(‘表达式’),’s’表示字符串disp()pause() pause off&#x2F;pause on if elseif switch 表达式（标量或字符串） case 表达式123（标量字符串或元胞矩阵） otherwise 不用加breaktry catch lasterr 试探性 其中总有一个可以实现，如果lasterr返回空字符串则说明try实现，其他则是catch实现 for 循环变量＝起始值：步长：终止值循环体end*当循环变量等于矩阵表达式时，依次等于其中元素循环嵌套与自然筛选法 while表达式循环体语句endbreak，continue，return不执行后续代码 函数文件基本格式：function 输出参数列表&#x3D;函数名（输入参数列表）注释说明语句段程序语句段输出形参多于1个时，要用[ ]函数递归nargin和nargout 判断输入&#x2F;输出参数个数进行函数分类处理 gloabal 变量名 全局变量，不过要在函数文件和命令窗口中都写入 keyboard和menu 设置断点 debug 绘图1.plot函数： 一个输入参数：x为实向量，复数向量，m*n维矩阵时的绘图 多个输入参数：plot（x1，y1，x2，y2，…） plot(x, y, ‘s’) 双纵坐标绘制函数：plotyy（x1，y1，x2，y2）横坐标标度相同，左纵坐标用于x1y1，右纵坐标用于x2y2； 对数坐标二维图形：semilogx(x1,y1,选项1,x2,y2,选项2,…): x为对数刻度,y为线性刻度。semilogy(x1,y1,选项1,x2,y2,选项2,…): y为对数刻度,x为线性刻度。loglog(x1,y1,选项1,x2,y2,选项2,…):x和y均为对数刻度。 2.极坐标 polarplot（theta，rho，’s’) latex: text(0.3,0.5,’sin({\\omega}t+{\\beta})’) 3.绘图调整 axis([xmin xmax ymin ymax zmin zmax]) 4.实例 5.图形保持hold on – 保持原有图形hold off – 刷新原有图形hold – 两种状态之间切换 6.图形分割 subplot（m，n，p）可以细分 7.特殊二维图形： barh&#x2F;bar（柱状图）和area(面积函数） 饼图pie（x） 散点图scatter（x，y） 直方图hist（x，n）：将x中的元素分成n份，然后用间隔相同的条形表示，返回每个条形中元素的个数。若x为矩阵，则hist函数对每一列数据生成一个直方图。如果n缺省就默认为10 玫瑰花图rose（theta） 火柴杆图stem（x，y） 阶梯图stairs（x，y） 误差条图errobar（x，e）：e指x中每个元素的误差 8.fplot（@fun，lim，tol，’s’） 9.三维图形 plot3（） 10.三维曲面 生成网格 并解二元方程x&#x3D;a:dx:b;y&#x3D;c:dy:d[X,Y]&#x3D;meshgrid(x,y); surf三维曲面图&#x2F;mesh三维网格图绘制三维曲面，其中z必须为矩阵而不能是向量或者标量，所以首先要用meshgrid生成一个二维坐标系，才会产生z meshc函数 – 带等高线的三维网格函数l meshz函数 – 带底座的三维网格函数l surfc函数 – 带等高线的三维曲面函数l surfl函数 – 具有光照效果的三维曲面函数 [x,y,z]&#x3D;sphere(n) – 圆心位于原点，半径为1的单位球体，n代表边的个数l [x,y,z]&#x3D;cylinder(R,n) – 柱面，R是一个向量，存放柱面各个等间隔高度上的半径l Z&#x3D;peaks(n) – 多峰函数，默认等分数为48 11.视角处理 view（方位角，俯仰角）； 旋转三维图形rotate(h,direction,alpha)：将句柄h的对象绕方向旋转一个角度•h是被旋转的对象，例如h&#x3D;figure•direction与view函数设置视点的方向类似，也有两种设置方法：球坐标设置法，设置为[theta,phi]，其单位是“度”；直角坐标法，即[x,y,z]•alpha是绕方向按照右手法则旋转的角度 背景颜色处理 colordef none&#x2F;black&#x2F;（）-表面图形的着色shading faceted – 将每个网格片用其高度的对应的颜色进行着色，但网格线保留，其颜色是黑色l shading flat – 将每个网格片用同一个颜色进行着色，网格线也相同颜色，表面更加光滑l shading interp – 在网格片内采用颜色插值处理，得出的表面图显得最光滑 12.隐函数绘图对于函数f&#x3D;f(x):l ezplot(f):在区间-2pi&lt;x&lt;2pi绘制图形ezplot(f,[a,b]):在区间a&lt;x&lt;b绘制图形l 对于隐函数f&#x3D;f(x,y):l ezplot(f):在区间-2pi&lt;x&lt;2pi和-2pi&lt;y&lt;2pi绘制f(x,y)&#x3D;0图形ezplot(f,[xmin,xmax,ymin,ymax]):在区间xmin&lt;x&lt;xmax 和ymin&lt;y&lt;ymax绘制f(x,y)&#x3D;0图形l ezplot(f,[a,b]):在区间a&lt;x&lt;b和a&lt;y&lt;b绘制f(x,y)&#x3D;0图形l 对于参数方程x&#x3D;x(t)和y&#x3D;y(t)：ezplot(x,y):在区间0&lt;t&lt;2*pi绘制x&#x3D;x(t)和y&#x3D;y(t)图形ezplot(x,y,[tmin,tmax]):在区间tmin&lt;t&lt;tmax绘制x&#x3D;x(t)和y&#x3D;y(t)图形 13.句柄 h&#x3D;plot（） set（h，属性一，选项，属性二，选项…) 符号运算f&#x3D;sym（‘’） 用sym函数建立 (R2018后使用str2sym函数)使用已定义的符号变量建立 建立符号矩阵 A&#x3D;str2sym（‘[]’） 符号矩阵的修改 subs(A,old,new) 调用符号矩阵 sym(A) 转化为数值矩阵 double(A) 求和符号&#x3D;symsum（） numden函数提取符号表达式的分子和分母 [n,d]&#x3D;numden(s) 因式分解与展开l factor(s): 对符号表达式s分解因式l expand(s): 对符号表达式s进行展开l collect(s): 对符号表达式s合并同类项l collect(s,v): 对符号表达式s按变量v合并同类项simplify(s): 应用函数规则对s进行化简 digits(n) —— 设置可变精度，缺省16位vpa(x,n) —— 显示可变精度计算 微积分| limit(f)| limit(f,x,a)| limit(f,x,a,’left’)| limit(f,x,a,’right’)| diff(f) 求表达式f对默认自变量的一次微分值；| diff(f, t)求表达式f对自变量t的一次微分值；| diff(f,n)求表达式f对默认自变量的n次微分值；l diff(f,t,n) 求表达式f对自变量t的n次微分值。int(f)求表达式f对默认自变量的积分值；int(f, t) 求表达式f对自变量t的不定积分值；int(f, a, b) 求表达式f对默认自变量的定积分值，积分区间为[a,b]；int(f, t, a, b) 求表达式f对自变量t的定积分值，积分区间为[a,b] 求解代数方程solve（方程）solve（方程，变量） 常微分方程求解[x,y,…]&#x3D;dsolve（f，c，v）f在初始条件c下的特解，变量v；如果没有初始条件c，则求通解Dny y的n阶导数","categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://pikonguwu.github.io/tags/%E5%AD%A6%E4%B9%A0/"}]},{"title":"撕自己的心，裂自己的肺","slug":"撕自己的心，裂自己的肺","date":"2023-05-27T14:53:27.000Z","updated":"2023-05-27T16:02:53.978Z","comments":true,"path":"2023/05/27/撕自己的心，裂自己的肺/","link":"","permalink":"http://pikonguwu.github.io/2023/05/27/%E6%92%95%E8%87%AA%E5%B7%B1%E7%9A%84%E5%BF%83%EF%BC%8C%E8%A3%82%E8%87%AA%E5%B7%B1%E7%9A%84%E8%82%BA/","excerpt":"期中考之后很长的一段时间都在沉寂。oj通过好像还是昨天才发生的事件。每次写博客都是一个新的小阶段，无数个小阶段汇成phase，这么来看自己的人生就是无穷无尽波动前进着的sin&#x2F;cos函数，SHM是简谐运动的缩写，叫做Simple Hbalabala Motion。","text":"期中考之后很长的一段时间都在沉寂。oj通过好像还是昨天才发生的事件。每次写博客都是一个新的小阶段，无数个小阶段汇成phase，这么来看自己的人生就是无穷无尽波动前进着的sin&#x2F;cos函数，SHM是简谐运动的缩写，叫做Simple Hbalabala Motion。 对不起在这里发大学物理的癫，大物真的给了我好多痛苦回忆。期末月突然就来了，上个星期我还在很自然的把周六周天悠闲地浪费掉，这周六我都得琢磨用晚上浪费好了。还有每天吃什么饭，琢磨下自己的营养结构和排毒。 区区一段文字透露着很普通平常的生活，但是我在这其中的痛苦……这学期我开始研究减肥，每天看小红书研究各种减肥食谱，同时还要压抑自己的馋欲看美团看吃播解馋，甚至这几天我都有点魔怔，戒断反应非常强烈，有时候想下一顿吃什么会脑子混乱地学都学不下去。我刚刚下定决心把小红书和美团全部卸载，深刻感受到了这些快生活平台给我的思想带来了什么奇奇怪怪的变化。我在这里尝试用文字记录下来，希望以后的自己不要再重蹈覆辙: 一开始你会上课下课没事就打开它，然后其首页推送精准戳中你的个人行业痛点，你会被吸引着无止境地看下去并且无时无刻被灌输不同的理念，保有理智的你还会斟酌下那种情况更符合你，欲望冲昏头脑的你只会看别人一天吃什么，不停地刷，不停地“参考”，不停地寻找更符合你的博主，不停接受多样理念，虽然你已经知道了大体框架，但是大数据会不断给你推送例外，例外，永远的例外，迫使你去颠覆你原有的理念，又重新接受一个新理念，在这两者，三者，甚至多者之间摇摆不停。我到底该怎么做？我该做这样的？还是该做那样的？哪个效果会更好？无穷的比较首先会充斥你的大脑，你会一直比较这些方法，比较需要案例，然后你又开始刷、刷、不停地刷。这样的行为会一直持续到你减肥结束，维持现有体重。此时的你经过日复一日的训练，大脑也是由肌肉组成的，肌肉记忆住了，你会养成刷小红书的习惯，甚至每天专门拿一个小时（铁咩的没错就是我10：00-睡觉）进行这样的习惯，有时候会刷到更晚甚至凌晨。你习惯看别人一天吃什么，习惯看别人讲些大体道理都是一样的视频&#x2F;文章，习惯看别人大口炫饭的香香模样，因为你还会嘴馋，拿他人当替身，拿电子榨菜自我欺骗。你甚至渴望这样的时刻，因为你自己做不到的事情有别人帮你做了，ta冥冥之中也是你的精神安慰，精神榨菜。你太专注于减肥&#x2F;维持体重这件事情，以至于你的课余时间只剩下小红书和美团来回切换。浪费个把小时之后，你会感到空虚，只是多还是少的区别，取决于你这一天正事（学习）干了多少。干得多空虚感少点，干得少空虚感促使你恼羞成怒，卸载！卸载！！第二天你又控制不住自己的手下回来，因为上面的参考确实给你增长了知识。 你感到有点超出自己控制范围了，有点惶恐，狠绝。不要急，你要做的是和小红书和解。以前的你是怎么做的？是不是只有周末晚上睡觉的时候会刷一刷，因为自己的需求其实并不大，只是随便看看就好。我理解你的求知欲，但是不能拿求知欲当作短时快乐的借口，并且随便自己沉沦。让自己沉沦也不是不行，只是你需要花很长的时间才会感到无趣并回到最开始的心态。不让自己沉沦，你会经过相当痛苦的戒断反应时段，之后欲望会越来越小。我不打算拿成就感这些虚无缥缈的自欺手段说事儿，毕竟你可以自己反驳自己。自己选择一条路，接受还是拒绝应该学的知识、应该看的书、应该做的行动。但总有一天它们会成为你的一部分，只是那个时刻到来早晚时差罢了，加上机遇、贵人，很多外界因素。 TAKE YOUR TIME. 所以今天晚上去夜市放纵了一下，看看咱北京这乡里屯： 吃到最后买了个梅菜扣肉锅盔，咬下去一瞬间梦回初中云大附中门口5块一个的梅菜扣肉饼，每次去都要排队等三五个人，妈妈在电动车上等我买完。我没留刘海，戴着黑框儿童眼镜，对自己容貌不自信也不在意，买完上车，回家或者去补习班。当时老羡慕云大附中了，高中去了高中版的云大附中，现在想想还是觉得昆一中更适合自己。但是师大附中提前给我上了一课，要不然大学就会变成大学版云大附中，而不是真正的大学。 最近在看木鱼水心讲水浒传，还去望京小街图书馆看了小半本《水浒传与中国社会》，知道了一些时代因素，看完木鱼水心讲解之后再去一趟看完，做一些读书摘抄放着。这个星期看了HOPICO讲东京事变，昨天黄昏时听着黄昏泣き，图书馆门口的大马路加上远处若隐若现的夕阳，没有拍照但是当时的心境发生了一些悄悄的变化，太快了没有抓住，可能改变了什么，不知道，再探索一下。以前有听过东京事变的歌，那时候觉得太low，不适合社会主义新青年。现在觉得刚刚好，精品中的精品，他们就是在风中飞扬的丝绸，自由懒散地飞，地上的人们抬头看，天空不再是一如既往的白。贝斯绝妙，没听过能动的三分钟的朋友们永别了。 hey咱武松大哥我是真喜欢！！！小李广花荣碾压当代所有男大。","categories":[],"tags":[{"name":"口水鸡真的很营养啊","slug":"口水鸡真的很营养啊","permalink":"http://pikonguwu.github.io/tags/%E5%8F%A3%E6%B0%B4%E9%B8%A1%E7%9C%9F%E7%9A%84%E5%BE%88%E8%90%A5%E5%85%BB%E5%95%8A/"}]},{"title":"oj通过之后","slug":"oj通过之后","date":"2023-05-17T07:09:55.000Z","updated":"2023-05-17T08:02:46.306Z","comments":true,"path":"2023/05/17/oj通过之后/","link":"","permalink":"http://pikonguwu.github.io/2023/05/17/oj%E9%80%9A%E8%BF%87%E4%B9%8B%E5%90%8E/","excerpt":"在14：25时，E题从答案错误 AC：60%变成正确的那一瞬间，我的心情除了不可置信还是不可置信。很难相信在前一个晚上还在A题AC10%挣扎痛苦的我，竟然都到E题AC了。其中很大程度上都需要感谢崔佬对我长达一个小时的当面帮助和纠错，分享他的思路。 这是第一个自己学了编程语言之后做出的半完整项目，其中骂了oj千千万万遍，自己两个晚上一直在发现新的错误和修改新的问题，当面对质之后才发现自己还有很多问题没有解决，并且debug效率低下。幸好中途没有太大脑宕机，大部分问题地解决自己都跟得上思路，再一次感叹男生的思维缜密且活跃，即使失败了也不会气馁放弃，只是平常淡定地思考策略。果然信息闭塞是学不好计算机的（点头），以后一定要多多和班上男生取经，多多广泛交流。","text":"在14：25时，E题从答案错误 AC：60%变成正确的那一瞬间，我的心情除了不可置信还是不可置信。很难相信在前一个晚上还在A题AC10%挣扎痛苦的我，竟然都到E题AC了。其中很大程度上都需要感谢崔佬对我长达一个小时的当面帮助和纠错，分享他的思路。 这是第一个自己学了编程语言之后做出的半完整项目，其中骂了oj千千万万遍，自己两个晚上一直在发现新的错误和修改新的问题，当面对质之后才发现自己还有很多问题没有解决，并且debug效率低下。幸好中途没有太大脑宕机，大部分问题地解决自己都跟得上思路，再一次感叹男生的思维缜密且活跃，即使失败了也不会气馁放弃，只是平常淡定地思考策略。果然信息闭塞是学不好计算机的（点头），以后一定要多多和班上男生取经，多多广泛交流。 总结一下自己出现的问题和解决策略： 在没有出现oj之前一直困扰自己的问题就是二维数组不能用全部用全局变量定义，必须至少有一维是常量才行。为此我直接把模块化编程这个选项去掉，直接在函数里进行用户输入操作，并进行一系列游戏流程。 oj发布后，输入测试用例要读清楚，并把相关的文字提示注销。 用了指针代表游戏是否结束的标志，但会出现内存超限（指针找不到所指代内容）。其实自己指针内容没怎么学好，老师讲的课一如既往地听不懂，翁恺的指针课反反复复睡着了七八次最后甚至拿来当失眠灵丹妙药，效果极佳。为此不用指针改用全局变量。 问号标记格子和没点开格子具有同等效力。之前一直没有把问号格子当回事。 直接把i和j当作全局变量来使了，出现很多问题。为此遍历用的临时变量还是用到了再定义方便很多。 胜利的条件判断之前一直判断错了，还搞了一个很麻烦的THUN-markk==THUN什么的现在想想真的是纯nt，p用没有。为此只需要没点开的格子（这里包括问号标记的，标记的和点状的）等于THUN即可。 判断游戏是否结束还苦恼了我一下，为此把flag（游戏结束的判断）放在打印表棋盘函数里贯穿始终，使用do-while循环判断flag是否等于1（进行中），是则继续输入，不是则返回主函数，主函数直接return 0. 感叹号、问号、取消标记时输出端记录雷数变化其实是一个非常普通的条件判断，当时脑子秀逗了越想越复杂，今天改好。为此是感叹号的时候，问号标记时标记数才减一；取消标记同理，其他情况则值更改格子状态，标记数不变。（如问号改取消标记，标记数不变）当然再重复一次操作标记&#x2F;问题标记&#x2F;取消标记操作不会发生变化，如果处理不当会使雷数发生变化。 双击只对数字状态格子生效为数不多的自己发现的问题哈哈哈。 双击时周围有标错的雷，只打开应该是雷的格子，其他格子状态不变 已经点开的格子状态不会再变化，无论是改感叹号还是改问号都不会生效。 大概是这些，想起来再补充。de着de着发现，最后的大头一般都是小细节，真的是细节决定成败。 高强度讨论一个小时，还吃了一个冰淇淋，甜死了！！！以后再也不吃西餐厅的冰淇淋了，自己以前是怎么喜欢吃西餐厅的冰淇淋的。 今天已经不想干任何事了，但是还有三重积分和大物在等着我补TT期末和六级也差不多来了，忙起来了。自己假期还没想好干什么，但是独自旅行的愿望很强烈！还有摆摊学做菜做饭或者在家自己试着做点糕点。","categories":[],"tags":[{"name":"大一下","slug":"大一下","permalink":"http://pikonguwu.github.io/tags/%E5%A4%A7%E4%B8%80%E4%B8%8B/"}]},{"title":"选修课笔记","slug":"选修课笔记","date":"2023-05-04T12:17:27.000Z","updated":"2023-05-06T11:48:01.991Z","comments":true,"path":"2023/05/04/选修课笔记/","link":"","permalink":"http://pikonguwu.github.io/2023/05/04/%E9%80%89%E4%BF%AE%E8%AF%BE%E7%AC%94%E8%AE%B0/","excerpt":"20230303 计算机视觉概述人工智能体系应用层：NLP，CV，ASR语音识别，BI生物识别技术层：概率和统计，模式识别，机器学习（包括深度学习）基础层：云计算，大数据，芯片 CV核心研究内容图像分类：对未知图像类别进行预测框架：待测图像通过特征表示成为特征空间（矩阵），然后进行特征匹配到相应的类别空间。 深度学习中的特征表示CNN（卷积神经网络）：卷积层，池化层和全连接层卷积：输入端像素通过卷积核&#x2F;滤波器（已知矩阵）点乘相加得到输出相应位置一个像素（矩阵中组成元素）。池化：分为最大池化和平均池化，类似于卷积。最大池化是将矩阵分块选择其中最大成为新矩阵元素，平均池化选平均值。全连接层：连接上一层所有输出，通过特征加权方式确定类别。常用CNN模型：AlexNet，VGG，ResNet","text":"20230303 计算机视觉概述人工智能体系应用层：NLP，CV，ASR语音识别，BI生物识别技术层：概率和统计，模式识别，机器学习（包括深度学习）基础层：云计算，大数据，芯片 CV核心研究内容图像分类：对未知图像类别进行预测框架：待测图像通过特征表示成为特征空间（矩阵），然后进行特征匹配到相应的类别空间。 深度学习中的特征表示CNN（卷积神经网络）：卷积层，池化层和全连接层卷积：输入端像素通过卷积核&#x2F;滤波器（已知矩阵）点乘相加得到输出相应位置一个像素（矩阵中组成元素）。池化：分为最大池化和平均池化，类似于卷积。最大池化是将矩阵分块选择其中最大成为新矩阵元素，平均池化选平均值。全连接层：连接上一层所有输出，通过特征加权方式确定类别。常用CNN模型：AlexNet，VGG，ResNet 目标检测目标跟踪图像分割：分为语义分割和实例分割（实例分割更细化）CNN实现图像描述应用实例机器人，无人驾驶，3D重建，图像编辑，视觉应答，人脸识别。 线上教育（教育资料），物理控制，元宇宙，公益事业（针对性），智能公路… 20230309 智能音频技术音频采集和预处理信息采集声音传感器，智能麦克风 预处理分割与检测，回声抑制，混响消除，降噪与分离，音源定位 啊啊啊啊啊啊这节课不记得什么原因翘了好像是忘了。。。。感觉错亿 20230316 自然语言处理技术底层技术 词法分析：分词，词性标注，命名实体识别，短语切分 前向最大匹配分词&amp;后向最大匹配分词 句法分析：成分分析（语法分析） 语义分析：词义消歧，语义角色分析，词嵌入表示词级别语义分析：词嵌入表示（将每个词映射成一个固定维数的向量，构成词向量空间，通过“距离”度量词义相似度）句子级别的语义分析：由词向量累加后平均作为句向量，计算句向量距离进行语义分析；或者直接生成句向量（人工标注），交给BERT等模型训练学习，生成句向量进行语义分析。文本相似度比较：欧氏距离，曼哈顿距离，余弦距离（先分词集，计算词频，词频向量化，带入向量模型公式） 篇章分析：篇章结构分析，指代消解共指，回指，预指 应用技术机器翻译（seq2seq序列模型），机器阅读理解（BiDAF&amp;FusionNet），文本摘要，故事生成，情感分析，知识图谱，人机对话；信息检索，图像描述，视觉叙事（理解图像序列并能生成连贯故事），视觉问答，文本生成图像 20230324 机器学习基础智能系统的数学模型 特征基元函数深度学习实现了特征提取的工业化，产生表示学习（自动学习出特征基元函数） 贝叶斯最优决策函数避免不确定性，一般来源于噪声干扰，未知的信息和知识，自身能力的有限性，混沌现象（如蝴蝶效应）。先验概率，再确定类条件概率分布，最后再验一次概率，说明机器已经掌握全部知识（其实是概率），列出函数。 决策函数自动求解机器学习：通过数据自动求解决策函数。通过数据集求解决策函数中的最优解（这就是训练&#x2F;学习）？其中有概率估计和参数估计（损失函数）得到目标函数最优解 机器学习的评价方法 代价函数度量预测错误的程度，常见的有0-1损失函数，平方损失函数，绝对损失函数，交叉熵损函数，对数损失函数等。 经验损失或训练误差公式（对于训练数据集而言） 机器学习的目标：泛化能力 泛化能力：该模型对未知数据的预测能力，有测试误差模型。主要影响因素是模型复杂度，训练样本数，学习策略（间隔最大化准则）。标准的学习策略中，目标函数需要 经验风险+？正则项（容量控制） 20230414 九天平台老师介绍+报告厅讲原理大睡特睡+怎么还没有专属名词，输入法还得找好麻烦不找了20230419 百度飞桨生态平台介绍+现场做了个图像识别的小项目奈何讲得太快完全没有跟上，今天下午做了结果出bug不会修复，遗憾结束20230427 chatgpt与多模态大模型驱动技术变革 一点印象都没有 太想放假呵呵服了我自己20230504 人工智能发展报告RLHF就是下一个transformerCPU&#x2F;GPU&#x2F;ASCI&#x2F;FPGA 入门路线 数学基础和编程语言基础 数学基础：线性代数和微积分（已学习） 概率论（大二课本）博弈论（Martin Nowak的Evolutionary Dynamics: Exploring the Equations of Life，有中文译本《进化动力学：探索生命的方程》，还有Richard Dawkins的The Selfish Gene，中文译本《自私的基因》） 编程语言：python：CS61A或者莫烦python 用时1-2周 numpy&amp;pandas（学有余力） 编程框架：pytorch 刘二大人 用时2周 深度学习 1-2months吴恩达+辅助学习（CSDN课后学习作业目录 何宽&amp;和鲸社区在线编程平台&amp;黄海广笔记）李沐；动手学深度学习 机器学习网课：吴恩达，李宏毅 NLP&#x2F;CV？transformer&#x2F;RLHF 自我入门路线：先完成概率论和python基础的学习，有时间一并进行pytorch的学习 202308前完成人工智能cs50和cs188（大约80h） 202308-202309深度学习 网课吴恩达+辅助学习&#x2F;李宏毅机器学习 根据掌握程度再抉择是否需要加课学习 202309-202312大二上学期结束机器学习系统&#x2F;机器学习 吴恩达+李宏毅 202401-202403 大二寒假目前还尚未确定方向：NLP&amp;CV&amp;ASR&amp;BI","categories":[],"tags":[{"name":"大一下","slug":"大一下","permalink":"http://pikonguwu.github.io/tags/%E5%A4%A7%E4%B8%80%E4%B8%8B/"}]},{"title":"五一","slug":"五一","date":"2023-05-03T14:16:16.000Z","updated":"2023-05-03T14:56:14.845Z","comments":true,"path":"2023/05/03/五一/","link":"","permalink":"http://pikonguwu.github.io/2023/05/03/%E4%BA%94%E4%B8%80/","excerpt":"五一要结束了，小纪念一下。","text":"五一要结束了，小纪念一下。 第一次当大学生，第一次纯粹的玩五一。五一结束后就是期末月，还有六级和暑假规划等着我去完成。玩了一晚上尼尔，三分钟热度现在已然停息，头晕脑胀，又会电子阳痿一段时间。还不如看看木鱼水心，或者把之前一直想立下的《蔑视》相关内容整理，也一直偷懒不想干。好吧，五一就这样过去了，起码到暑假之前不会再有时间了，给自己的拖延鼓掌。游戏瘾突然犯了，感觉自己好久都没有这么平白无故的堕落，真正做到了一天什么都不干，一天纯摆的状态，很痛苦，以后再也不这么搞了，总结下来就是没有意思。 五一去沈阳玩了三天，虽然只是逛街和女孩茶话会，但是开心和放松确实是不可否认的。不清楚每天在洗浴中心过夜，睡硬板子和大通铺按理来说都是苦难行径，回到北京的时候除了释怀和轻松以外，也多了怀念和快乐，旅游表面上看着像活受罪（实际上确实也是活受罪），但是烦恼会随着景色的变化消散一段时间，给人一种放下重担的短暂快乐。养好精气神回来继续旅途，不说前进的是否比以前更有底气，反正内卷和焦虑已经下降一大个档次了。与之相对的，对自己的要求会降低，感觉这五天我又回到了高中那时候的样子，摆烂和逃避，是时候捡起我自己的烂摊子，好好走过接下来的一个半月学期时光。 回来那天晚上其实自己挺伤感的，友情这个东西在不知不觉中就已经大变样了，很难再回到之前无所不谈无话不聊恨不得住一起畅谈到天明的状态。不知不觉中彼此的分享欲就没有那么旺盛了，除了一些老旧话题，其余时间也是看着手机发呆。我认为网络上的交流已经足够我去维持友谊的宽度，所以把人约出来只会大眼瞪小眼，还得绞尽脑汁想话题，真的没有网上聊天随时随地，开始和结束都把握在自己手里，私人空间足够大的感觉好。想完这些才发现，原来不是大家淡薄了，是我们都变了，有心无力也无法维持之前的状态了。我承认只有我一个人在怀旧，而且要求很苛刻，没有人能达到。其实我很在意视线交汇的瞬间，谁先移开。也许我还需要一段时间才能适应这种事，友情已经不是说说就行的事了，前程、理想、家庭、条件……这些东西渗入到我们所谈论的话题中，沉重但是正常，只有我还不习惯。 好像第一次知道落差什么意思。 第二天就想通了，觉得前一天晚上自己无病呻吟。没什么好说的，就像没人知道你来姨妈的时候什么时候血崩，咯噔一下只有你自己在懊恼。本来想说成年人只有习惯，小孩子才玩夸张。但是一点都不想自诩自己成年了，拿年龄当借口告诉自己别惹麻烦伤身伤脑子。怕痛就去当胆小鬼，胆小鬼什么时候都可以当。拿年龄分责任承担真无聊。 到北京第二天去吃了自己喜欢的东西，散了两个公园看了看北京人假期生活，自己也融入到懒散大军，尽情享受了下假期。 最后一天吃了自助，两个发现：第一个是没像以前那样逼着自己吃完，第二个是自己的代谢应该没有受损。现在再加第三个，明天开始减肥。 五一结束了，估计再没这样的好日子过了，接下来的时间就背着电脑过吧，累不累死自己说了算。","categories":[],"tags":[{"name":"口水鸡真的很营养啊","slug":"口水鸡真的很营养啊","permalink":"http://pikonguwu.github.io/tags/%E5%8F%A3%E6%B0%B4%E9%B8%A1%E7%9C%9F%E7%9A%84%E5%BE%88%E8%90%A5%E5%85%BB%E5%95%8A/"}]},{"title":"欸？期中周？！","slug":"欸？期中周？！","date":"2023-04-21T10:16:02.000Z","updated":"2023-04-21T14:18:00.382Z","comments":true,"path":"2023/04/21/欸？期中周？！/","link":"","permalink":"http://pikonguwu.github.io/2023/04/21/%E6%AC%B8%EF%BC%9F%E6%9C%9F%E4%B8%AD%E5%91%A8%EF%BC%9F%EF%BC%81/","excerpt":"本星期又是一个崭新的轮回。","text":"本星期又是一个崭新的轮回。 期中周过得是如此的快，感觉我还活在上个星期五走在去往瑞幸的路上，出着汗用手机遮太阳，思考着没有边际的东西，就这样无谓地走在北京的黄荒地上。我承认经历需要沉淀才会发挥出它的作用，但是我仍然不推荐大家使用步行的方式释放自己，除非你真的很喜欢脚踩在袜子里，袜子黏在鞋子上，鞋子踩在地上扬起尘土的感觉。冰吸生椰拿铁真的很好喝，我推荐大家都去喝。反正我这周一整周都在回味那种感觉，扬尘、音乐、擦肩而过的人、便利店的冰柜和货架、五点高架桥上的车流、远处的落日、强烈但是温柔的风、还有蠢笨的自己。 我给不了上个星期一个完美的答案，我也不相信此时自己所选择的路就是完全我想要的，但是杜绝摇摆不定和临时返航，我让舵手平和心境（虽然她还很浮躁，并且完全无法相信自己的大脑），先前进，再思考。我就是“xx”号的船长，主导着我的部分在空阔无边并且危机四伏的大海上航行，每天白天执行航行任务，晚上睡前检查船舱安全设施和航行任务是否合理，同时为明天的到来做好准备。但是经常到了第二天早上才会一边迷糊一边思考今天的航程和任务，设立上下限，宣布休息娱乐室的开放时间，然后一整天都尽量抑制自己不要摸鱼。 这个学期我才开始明白什么叫“大不了上b站自学”。我已经分不清我每天给自己布置的任务是否是自愿还是完成命令了，因为我在这个专业，身边的人都在学习相关知识，所以我不知道我到底喜不喜欢它，我只是在时刻怀疑自己是否能做到，疑惑为什么在我的电脑上似乎就会出很多奇怪的bug，甚至还成为了一个圈让我感觉到永远无法解决。随着这样的心态，通识课的学习每天被我压缩到一个非常短的时间内，差不多三个小时封顶。我对做出这样改变的自己也非常惊奇，上个学期学一天的经历已经成为冰河世纪的事情，被我封存在记忆的最深处，图书馆、时效期为一天的个人专属座位、地上的插座和不断更新的人流，我对这些因素已经建立了不耐受性，这个学期的我更多待在教室和寝室里，做功课以外的事情，并且每天忙碌到很晚。自己当老师并布置作业这种事情给了我很大的自由空间，但是也产生了很多上学期完全没有思考过的顾虑。我经常会因为这些顾虑感到喘不过气，虽然自己什么都没有干，但是莫大的心累让我感到没有正反馈的空虚、疲惫和无力。而且它不是一种瞬时效应，它就是一朵迟迟不肯散去的阴云悬挂在我的上空，达摩克里斯之剑虽说有点中二，但是用这个形容也可以。反正我一直在意它的存在，我一直担心它哪天降下暴雨暴打我一顿。 好累。 周末对我的感觉是放松，但是又不完全放松；快乐，但是又不完全快乐；开心，但是又不完全开心。它可以作为生活的调剂，但是它无法调剂我这个人。突然想到“如此生活三十年，直到大厦倾塌”。成年到中年的过渡，已经出现了很多案例了。但是青年到成年的过渡，我身边的人似乎没有感受到这种被埋葬的感觉，或许是只有我把危机看得过近，我把所有东西都迫不及待地摆在我的面前，逼迫自己无限的思考和纠缠，直到想出一个确切的答案。因为我要实习，所以我要考虑我的能力；因为我也许要留学，所以我要考虑我的英语；因为我要就业，所以我要现在就开始关注就业市场；因为我要赚钱，所以我现在就要思考市场红利……我似乎思考的太多，反而成为了一只绵羊。我也许清楚自己的处境，但是我就是无法摆脱它，找到一个解决方法太难了，难到我甚至无从下手。 期中周其实没什么好说的，只是突然发现自己有钱了，进行了几次冲动消费，得到的幸福却没有我想象中的充足。考试考过了就是考过了，可能是对自己的盲目自信，可能是真的无所谓，我对绩点的追求大大不如从前。我想要什么？还在艰苦卓绝地探索中。 现在在干的事： 读《优秀的绵羊》 跟进前端的课程（但是我已经感到无趣了） 学习shell 每天自我挣扎和搏斗 忙里偷闲，有空就耍手机 草，我这人挺搞笑的。 感谢你看到最后！这是彩蛋：","categories":[],"tags":[{"name":"口水鸡真的很营养啊","slug":"口水鸡真的很营养啊","permalink":"http://pikonguwu.github.io/tags/%E5%8F%A3%E6%B0%B4%E9%B8%A1%E7%9C%9F%E7%9A%84%E5%BE%88%E8%90%A5%E5%85%BB%E5%95%8A/"}]},{"title":"20230414的暴走","slug":"20230414的暴走","date":"2023-04-14T14:21:36.000Z","updated":"2023-04-21T12:59:26.496Z","comments":true,"path":"2023/04/14/20230414的暴走/","link":"","permalink":"http://pikonguwu.github.io/2023/04/14/20230414%E7%9A%84%E6%9A%B4%E8%B5%B0/","excerpt":"现在是20230416的下午17：24分，距离无意义的出行经过了差不多48+3小时。","text":"现在是20230416的下午17：24分，距离无意义的出行经过了差不多48+3小时。 想要保持一个努力向前冲的状态真的太艰难了，更加佩服上个学期的zzm忍辱负重、坚持到底、一往无前、几乎没有犹豫和彷徨的走过学期生活，疫情+全球低迷的主旋律更容易让人静下心来认真专注地只做一件事。这个学期的zzm急躁并且徘徊犹豫，可能是因为迟迟没有新目标促使自己专心向前，一个接一个的意外让我不得不重新思考该段时间内自己的所作所为是否值得，哪怕意外是和自己完全没有关系的领域，都会停下手中的事，反省和焦虑。 这个星期尤其撕裂。周中的间歇性对比焦虑、不间断半自学性质青训营的正式开营，和自我学习方法的改变即将要见成效的忐忑和不安构成了忙碌、充实、好坏参半，和惊惶的周中五天，幸好任课老师的仁慈，本周作业并不是很多（要不然这周课基本都没听我直接g）。周五下午上完物理实验，我觉得不一个人散散心就会变得无可救药了，下午三点出校，走了六公里去离学校最近一家瑞幸点了杯最近新品，然后去旁边的便利蜂买了根蛋白棒打算尝尝味。六公里对一个死宅真的不是很友好，奉劝大家如果没有爆发释放性的情绪还是不要暴走了，骑美团新型共享单车（白色至尊）兜风比走路吹沙看大片施工工地舒爽太多。 就像这次，一个人出门甚至不如在学校学个三个小时有用&#x3D;_&#x3D;到了瑞幸觉得自己累得想死，冰吸咖啡三两口就喝完了，心情没有明显的变化，耳机里放的歌只有吵闹，手机刷着也没有意思，坐在科技交流中心一楼的玻璃窗里看大树小树在狂风里乱飞。唯一好的心情是在外围找到一辆崭新的白色至尊美团共享单车，骑起来非常顺手且舒服，高速路上下坡很爽，下午五点的风很惬意。回来走的不同的路，看到了北京版尼尔机械纪元破旧大楼，心情大好。 看的越多，越觉得北京确确实实不适合我。和同学说北京就是金玉其外败絮其中，我完全领会不到北京到底有什么吸引我的地方，无论是无数个很像昆明的转角，还是恶劣的十级大风和沙尘暴，还有完全没有共享电单车的路口，还有从建筑和距市中心多远距离就能看得出来的贫富差距，还有一种冷漠的情绪从无形的空气中就能缠绕我，让我犯鸡皮疙瘩，生活无望。北京是个学习的好地方，但它不是我生活和发展的好地方。我一直在给自己找借口，可能是我看的不够多，总有一天也许会接纳这个地方。但是我现在真真切切的承认，自己的感受就是最重要。也许有人会喜欢这样朴实无华、富含生活气息的昌平，但是我感觉所有人都很累，“北国风光”这样的字眼到现在我都不理解。 周末两天和朋友狠狠出校吃了两顿比较大的，周六下了次馆子，周天来吃了昌平站的小吃，数了数有九样，加上最后两点半吃的张亮麻辣烫。回到寝室发现冰箱被舍友冻得肉整坏了，也有可能是它带动肉坏的，总之清理了自己的小窝，到教学楼自习，晚上还要回去检查自己心爱的冰箱还能不能工作，要不然我冻的糕点都要这两天吃掉，太心碎。不过和朋友出门很开心，他们给我的支撑感能够让我继续应对充实过头的下个星期。 我一点都不想长大。一点都不想面对就业，AI，取代，全球局势，事业发展，人生发展，实习。这么看来，学习已经变成了我的逃避区，什么都不想面对的时候就学习吧，把那一天留给学习完的自己。但是活到老学到老，要是生活一直是大一上下就好了。我深刻地感受到了成长需要付出的代价和走向成年那一刻需要作出的选择和勇气，无时无刻想让自己真正发疯，精神病院里我可以尽情傻笑，做奇怪的事，做到一半或者1&#x2F;3就停下来，哭，或者打滚，吵闹。正是因为认识到自己的平凡和普通，所以才做不到随心所欲地卸下我所承担的一切，所以才做不到发光和特别。无论怎么鼓励自己，我的成绩总比我预期的少很多。 身边的人都在搞比赛和创新，思考自己转行或者项目的可能性，好像只有我还沉浸在上个学期的余韵中，平淡地学习和生活，没有这个心情和别人合作做出一个项目，这其中的疲惫和心累我还没接触就已经感到十万倍的累了。唯一的借口是幸好我还在大一，我还可以有这样一个学期留给我稍微摆烂，做自己想做的事，随便规划。 这样的随笔献给还在思考挣扎和焦虑中的自己，虽然已经确定了大致方向，但是干劲已经没有上个学期那么浓烈，果然没有低谷就没有冲击高峰的力量，但是这样平静的生活也挺好，起码我还在前进，哪怕只是在规则内。","categories":[],"tags":[{"name":"口水鸡真的很营养啊","slug":"口水鸡真的很营养啊","permalink":"http://pikonguwu.github.io/tags/%E5%8F%A3%E6%B0%B4%E9%B8%A1%E7%9C%9F%E7%9A%84%E5%BE%88%E8%90%A5%E5%85%BB%E5%95%8A/"}]},{"title":"这是一个测试post","slug":"这是一个测试post","date":"2023-04-12T12:06:21.000Z","updated":"2023-04-16T11:39:21.637Z","comments":true,"path":"2023/04/12/这是一个测试post/","link":"","permalink":"http://pikonguwu.github.io/2023/04/12/%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95post/","excerpt":"first headthis is a test sentence. this is another test sentences. second headcan you switch the row?i can. third headtomorrow i am gonna to do some learning for front programme PAINFUL forth head","text":"first headthis is a test sentence. this is another test sentences. second headcan you switch the row?i can. third headtomorrow i am gonna to do some learning for front programme PAINFUL forth head this is a [link] (https://markdown.com.cn/basic-syntax/links.html “markdown”) i feel the markdown is not quite difficult, and i want to work in damele pizza.damele pizza is soooooo delicious. fifth headint main()&#123; printf(&quot;i hate wpf&quot;); let i=0; for (let i=0;i&lt;100;i++)&#123; break; &#125; grid on console.log(&#39;this is the grammor?grammer?of javascript&#39;) &#125; learning of for mid-term exam math competition(havent start yet just matlab basical grammer) english daily learning saolei game computer level.2 in december -nothing but 1-2-3 * use the transform-meaning string. i am not good at html grammer.","categories":[],"tags":[]},{"title":"一切的开始","slug":"一切的开始","date":"2023-04-11T14:23:32.000Z","updated":"2023-04-21T12:59:40.204Z","comments":true,"path":"2023/04/11/一切的开始/","link":"","permalink":"http://pikonguwu.github.io/2023/04/11/%E4%B8%80%E5%88%87%E7%9A%84%E5%BC%80%E5%A7%8B/","excerpt":"上个星期四花了大半天进行个人博客的搭建，但是因为自己倔非要用不同的主题而出bug不会解决遗憾告终。今天晚上终于二次尝试，一个小时就搭建出来了！那一瞬间的心情激动得难以言喻，连后面的MATLAB应用选修课都懒得听。趁热打铁换上自己心仪的主题，其实一切都不是那么难，前提是要首先熟悉好环境和教程文档，想清楚自己要怎么实施，不要一根筋一股脑上头又一败涂地。 锵锵！！我的个人博客网站哦！希望以后的自己来看这个属于一切开始的自己会被可爱得笑出声，缓解缓解莫大的压力。","text":"上个星期四花了大半天进行个人博客的搭建，但是因为自己倔非要用不同的主题而出bug不会解决遗憾告终。今天晚上终于二次尝试，一个小时就搭建出来了！那一瞬间的心情激动得难以言喻，连后面的MATLAB应用选修课都懒得听。趁热打铁换上自己心仪的主题，其实一切都不是那么难，前提是要首先熟悉好环境和教程文档，想清楚自己要怎么实施，不要一根筋一股脑上头又一败涂地。 锵锵！！我的个人博客网站哦！希望以后的自己来看这个属于一切开始的自己会被可爱得笑出声，缓解缓解莫大的压力。 一切的开始“梦是现实的延续，现实是梦的终结。”很喜欢eva里面的这句话，庵野秀明总是会搞些不符合死肥宅气质的话语，让我觉得痞子这人就是神，哪怕最后一部电影大多差评，但是它在我心中还是我认为恰当的最佳结局———— 偏了！拉回来。 这学期开始自己就很想写点东西，要么是记录自己的灵感，要么是写写读后感，要么是说说自己的心境变化，甚至到自己一天干了什么都想记录下来，满足自己的虚荣心和空虚感。这么想想，我确实是平凡得不行的分享欲极强的小女生，心情不好的时候什么都懒得干，心情好的时候又大发慈悲，当我的朋友真的很辛苦啊，老是要迁就我的心情，如果我突然暴走了可能第一个受罪的就是你！（指）好吧我尽量控制住我自己少发牢骚。对国际事务我没有很庞大的见解，也不觉得某个哲学社会热点可以让我侃侃而谈，做不到啊！我只是一个没有文化的打工仔罢了。我感觉我的想法都是会在脑子里成型，然后嘴上说不出来，只是在脑袋给我一个决策：这件事情你得这么判断，这样判断铁定是对的。然后我说：遵命长官！ 对于自己的事情才会很上心，有很强的分享欲告诉大家我最近干了嘛，有什么变化，快来快来关心我（pien.jpg） 进行了深刻的自我反省，书还是看少了，路还是走少了，人还是认识少了，知识还是学少了，我还是太摆了，当代李白，大家好我叫周太白。 上个星期朱同学突然间做了个人博客启发了我，本来以为微信公众号已经很够用了，还是控制不住自己去接近诱惑，哪怕期中堂堂来袭，我还是花了两天宝贵时间迈出这第一步。构建完今晚都是跳着回宿舍的，幸好控制住自己在鸿雁路上乱叫和撞墙，要不然真成校徽了。希望以后的自己还能做出更多有意思的事情！ 这学期比上学期摆了不是一点两点这句话我已经说厌了，希望这样的学习方法在期中考试里会有成效，最后的祝愿。上学期是完全靠自己超越自我的第一个阶段，这学期必须成为第二个，还要继续潜心修炼自己啊，保研边缘人。每当你发现自己在摸鱼，摆烂，什么都没想情绪也没有波动，但就是什么都不想干的时候，恳求未来的我先做一个深呼吸，要上的撤硕赶紧上完，回来坐好，想想自己的空间时间，想象自己还有多少人在牵挂，还有多少人牵挂你；你要做什么，你要完成什么。明知道自己在摆烂的时候，就应该立马收起手机，做以上的动作，清空自己的阴霾，继续前进。","categories":[],"tags":[{"name":"口水鸡真的很营养啊","slug":"口水鸡真的很营养啊","permalink":"http://pikonguwu.github.io/tags/%E5%8F%A3%E6%B0%B4%E9%B8%A1%E7%9C%9F%E7%9A%84%E5%BE%88%E8%90%A5%E5%85%BB%E5%95%8A/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-04-11T11:39:15.234Z","updated":"2023-04-11T11:39:15.234Z","comments":true,"path":"2023/04/11/hello-world/","link":"","permalink":"http://pikonguwu.github.io/2023/04/11/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"学习","slug":"学习","permalink":"http://pikonguwu.github.io/tags/%E5%AD%A6%E4%B9%A0/"},{"name":"口水鸡真的很营养啊","slug":"口水鸡真的很营养啊","permalink":"http://pikonguwu.github.io/tags/%E5%8F%A3%E6%B0%B4%E9%B8%A1%E7%9C%9F%E7%9A%84%E5%BE%88%E8%90%A5%E5%85%BB%E5%95%8A/"},{"name":"大一下","slug":"大一下","permalink":"http://pikonguwu.github.io/tags/%E5%A4%A7%E4%B8%80%E4%B8%8B/"}]}